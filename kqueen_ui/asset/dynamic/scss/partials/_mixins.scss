// *****************************************************************************
// Mixins
// *****************************************************************************

// Media queries for use with mobile first
// Usage: @include media(sm) { text-align: left; }
@mixin media($size) {
    // Landscape Mobile Phones: xs - applies to min and higher
    // Anything without media queries is for the small screen
    @if $size == sm {
        // Portrait Mobile Phone to Landscape Tablet: sm - applies to min and higher
        @media (min-width: 768px) { @content; }
    }
    @else if $size == md {
        // Landscape Tablet to Desktop: md - applies to min and higher
        @media (min-width: 992px) { @content; }
    }
    @else if $size == lg{
        // Large Desktop: lg - applies to min and higher
        @media (min-width: 1200px)  { @content; }
    }
    @else {
        @error "Fix: @import media(#{$size})"
    }
}

/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

@mixin mirantis-button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:focus,
  &.focus {
    color: $color;
    background-color: saturate($background, 10%);
        border-color: saturate($border, 10%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
        border-color: darken($border, 10%);
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: saturate($background, 10%);
        border-color: saturate($border, 10%);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: saturate($background, 10%);
          border-color: saturate($border, 10%);
    }
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}
